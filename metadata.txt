# This file contains metadata for your plugin. Since 
# version 2.0 of QGIS this is the proper way to supply 
# information about a plugin. The old method of 
# embedding metadata in __init__.py will 
# is no longer supported since version 2.0.

# This file should be included when you package your plugin.# Mandatory items:

[general]
name=QGISpell
qgisMinimumVersion=3.00
qgisMaximumVersion=3.99
description=Creates context menu spell checking for attribute data based on ENCHANT libraries
version=0.2
author=Chris York (Walking-the-Talk)
email=chris.york@walking-the-talk.co.uk

about= This is a proof of concept plugin for Spell Checking your attribute data - it builds a custom attribute form in a Dock window. It is necessarily clunky because QGIS does not currently expose the python bindings to allow the native attribute forms to use this functionality. It uses a custom identify tool to view each feature's attributes and borrows basic functions from gotonextfeature3 plugin for navigating through features: it's possible to loop through each feature of a selected layer - the canvas will Pan  or Zoom to each feature. REQUIRES: Enchant libraries - can be loaded using pyEnchant or libenchant2 in your python installation. Currently NOT working fully in Windows due to the python interpreter not loading libraries correctly (see reported QGIS issues). TRY: if you can install Ubuntu on WSL this will work on a Windows PC

tracker=https://github.com/walking-the-talk/qgispell/issues
repository=https://github.com/walking-the-talk/qgispell
# End of mandatory metadata

# Recommended items:

# Uncomment the following line and add your changelog:
changelog= v0.2 - introduced mapTool function to identify feature attributes. Fixed zoom / pan error (layer geometry / Canvas CRS mismatch). Added more error checking

# Tags are comma separated with spaces allowed
tags= Spelling, attributes

homepage=https://github.com/walking-the-talk/qgispell
category=Plugins
icon=icon.png
# experimental flag
experimental=True

# deprecated flag (applies to the whole plugin, not just a single version)
deprecated=False

